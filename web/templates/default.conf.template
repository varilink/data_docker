server {

    listen      80;
    listen      [::]:80;
    server_name ${DATA_WEB_HOST};

    location = /_auth {

# Authentication and authorisation handler, which is used to validate access to
# the secure area of the website.

        internal ;

        include uwsgi_params;
        uwsgi_modifier1 5;
        uwsgi_pass ${DATA_APP_HOST}:${DATA_APP_PORT};

        uwsgi_pass_request_body off ;
        uwsgi_param CONTENT_LENGTH "" ;
        uwsgi_param HTTP_X_CONFIG /usr/local/etc/data ;
        uwsgi_param HTTP_X_ORIGINAL_URI $request_uri ;

    }

    location / {

# Default location handling, which is overridden were required for specific
# nested locations further down.

        include uwsgi_params;
        uwsgi_modifier1 5;
        uwsgi_pass ${DATA_APP_HOST}:${DATA_APP_PORT};
        uwsgi_intercept_errors on;
        error_page 404 /not_found;
        error_page 500 /error;

    }

    location /secure {

# The secure area, which is only accessible to authenticated admin and rep
# users, who then have different levels of access rights.

        auth_request /_auth;

        include uwsgi_params;
        uwsgi_modifier1 5;
        uwsgi_pass ${DATA_APP_HOST}:${DATA_APP_PORT};
        uwsgi_intercept_errors on;

        error_page 404 /not_found;
        error_page 500 /error;
        error_page 401 /account/sign_in;
        error_page 403 /unauthorised;

    }

    location ~ ^/(assets|static|upload) {

# /assets contains website client assets such as stylesheets, images and
# javascript. /static contains the static content used by the Django Admin
# interface, which consists of stylesheets, fonts, images and javascript.

        root /usr/share/nginx/html;

    }

    location /webmin {

# The Django Admin service's dynamic content, which is served by Python.

        proxy_pass http://${DATA_ADMIN_HOST}:${DATA_ADMIN_PORT} ;

    }

}
